@model IEnumerable<AccountType>
@{
    ViewData["Title"] = "Tipos cuentas";
}

<h1>Tipos de cuentas</h1>
<h5>El tipo cuenta se refiere a como podemos agrupar cuentas.
    Ejemplos: Préstamos, tarjetas de crédito, etc.
</h5>
<a asp-action="Create" class="btn btn-primary mb-3">Crear nuevo</a>
<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="sorteable">
        @foreach (var accountType in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@accountType.Id" class="ids">
                    <a class="btn btn-primary" asp-action="Update" asp-route-id="@accountType.Id">Editar</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@accountType.Id">Borrar</a>
                </td>
                <td>
                    @accountType.Name
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script>
        const urlSort = "@Url.Action("sort")";
        $(async function(){
            $("sorteable").sorteable({
                stop: function(e, ui){
                    await updateOrders();
                }
            });
            async function updateOrders(){
                const ids = getIdsFromElements();
                await sendIdsToBackend(ids);
            }
            function getIdsFromElements(){
                const ids = $(".ids").map(function(){
                    return $(this).val();
                }).get();

                return ids;
            }
            async function sendIdsToBackend(ids){
                var data = JSON.stringify(ids);
                await fetch(urlSort, {
                    method: "POST",
                    body: data,
                    headers: {
                        "Content-Type" : "application/json"
                    }
                });
            }

        })
    </script>
}
